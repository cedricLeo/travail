<?php

namespace MyApp\MobileBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * DistancesRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DistancesRepository extends EntityRepository
{
	/**
	 * Liste des distances pour les activités de l'hébergement
	 */
	public function getAfficheDistanceActiviteHebergement($id)
	{
            $sql = 'SELECT p FROM MyAppMobileBundle:Distances p WHERE p.hebergement_id = :id ORDER BY p.nom_fr ASC ';
            $query = $this->getEntityManager()->createQuery($sql);
            $query->setParameter('id', $id);
            return $query->getResult();
	}
	
	/**
	 * Méthode pour récupérer et trier par activite_id en ordre croissant
	 */
	public function getListeLesDistances($id)
	{
            //$sql = 'SELECT p FROM MyAppMobileBundle:Distances p WHERE p.hebergement = :id AND p.distance <> 0 ';
            $sql = 'SELECT p FROM MyAppMobileBundle:Distances p WHERE p.hebergement_id = :id ORDER BY p.activite_id ASC ';
            $query = $this->getEntityManager()->createQuery($sql);
            $query->setParameter('id', $id);
            return $query->getResult();
	}
	
	/**
	 * Méthode pour récupérer les activités qui ont des distances != 0 et que l'on tri distance ASC
	 */
	public function getTriLesDistancesParNomFrASC($id)
	{
            $valeurExclue = "";
            $sql = 'SELECT p FROM MyAppMobileBundle:Distances p WHERE p.hebergement_id = :id AND p.distance <> :value ORDER BY p.distance ASC ';             
            $query = $this->getEntityManager()->createQuery($sql);
            $query->setParameter('id', $id);
            $query->setParameter('value', $valeurExclue);
            return $query->getResult();
	}
        
        /**
         * Méthode pour rechercher la liste des distances qui existent pour cet hébergement
         */
        public function getRechercheLesDistancesAvecHebergement($idactivite, $idhebergement)
        {
            $sql = 'SELECT p FROM MyAppMobileBundle:Distances p WHERE p.hebergement_id = :idhebergement AND p.activite_id =:idactivite ';
            $query = $this->getEntityManager()->createQuery($sql);
            $query->setParameter('idhebergement', $idhebergement);
            $query->setParameter("idactivite", $idactivite);
            return $query->getResult();
        }
	
	 /**
         * Méthode pour rechercher les distances des activités du client
         */
        public function getRechercheLesDistancesDuClient($idactivite, $idhebergement)
        {
            $modif = [$idactivite."km", $idactivite."k m",  $idactivite."K m",  $idactivite."KM",  $idactivite."K M",  $idactivite." km",  $idactivite." k m",  $idactivite." KM",  $idactivite." K m",  $idactivite];
            $sql = 'SELECT p FROM MyAppMobileBundle:Distances p WHERE p.hebergement_id = :idhebergement AND p.distance IN (:distance)';
            $query = $this->getEntityManager()->createQuery($sql);
            $query->setParameter('idhebergement', $idhebergement);
            $query->setParameter("distance", $modif);
            return $query->getResult();
        }

}